name: Release CI

on:
  workflow_dispatch:
  push:
    tags:
      - v**


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-binaries:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: ubuntu-latest
            rust_target: x86_64-unknown-linux-gnu
          - os: macos-latest
            rust_target: x86_64-apple-darwin
          - os: macos-latest
            rust_target: aarch64-apple-darwin
          - os: windows-latest
            rust_target: x86_64-pc-windows-msvc


    runs-on: ${{ matrix.platform.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Output info
        run: echo ${{ matrix.platform.os }} ${{ matrix.platform.rust_target }}

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: 'Setup Rust'
        uses: actions-rs/toolchain@v1
        with:
          default: true
          override: true
          profile: minimal
          toolchain: stable
          target: ${{ matrix.platform.rust_target }}

      - uses: Swatinem/rust-cache@v2

      - name: install dependencies (ubuntu x86_64)
        if: matrix.platform.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

      - name: Build Frontend
        run: yarn && yarn build

      - uses: JonasKruckenberg/tauri-build@v1.2.2
        id: tauri_build
        with:
          target: ${{ matrix.platform.rust_target }}

      # The `artifacts` output can now be used by a different action to upload the artifacts
      - uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: "${{ join(fromJSON(steps.tauri_build.outputs.artifacts), '\n') }}"

  publish:
    needs: build-binaries
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v3
      # Download the previously uploaded artifacts
      - uses: actions/download-artifact@v3
        id: download
        with:
          name: artifacts
          path: artifacts
      # And create a release with the artifacts attached
      - name: 'create release'
        uses: softprops/action-gh-release@master
        id: release
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        with:
          name: "Tauri App vx.x.x"
          draft: true
          files: ./artifacts/**/*
